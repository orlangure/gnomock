name: Test
on:
  push:
    branches:
      - master
  pull_request:
jobs:
  lint:
    name: "[core] lint"
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.15
        uses: actions/setup-go@v1
        with:
          go-version: 1.15
      - name: Check out code into the Go module directory
        uses: actions/checkout@v1
      - name: Get dependencies
        run: go get -v -t -d ./...
      - name: Get golangci-lint
        run: curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh| sh -s -- -b $(go env GOPATH)/bin v1.23.8
      - name: Lint
        run: $(go env GOPATH)/bin/golangci-lint run --timeout 2m0s ./...

  test-core:
    name: "[core] gnomock, gnomockd"
    runs-on: ubuntu-latest
    env:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    steps:
      - name: Set up Go 1.15
        uses: actions/setup-go@v1
        with:
          go-version: 1.15
      - name: Check out code into the Go module directory
        uses: actions/checkout@v1
      - name: Get dependencies
        run: go get -v -t -d ./...
      - name: Test Gnomock
        run: go test -race -cover -coverprofile=gnomock-cover.txt -coverpkg=./... -v .
      - name: Test gnomockd
        run: go test -race -cover -coverprofile=gnomockd-cover.txt -coverpkg=./... -v ./internal/gnomockd -run TestGnomockd
      - name: Test internal
        run: |
          go test -race -cover -coverprofile=internal-cover.txt -v -coverpkg=./... \
            ./internal/errors \
            ./internal/registry \
            ./internal/cleaner \
            ./internal/health
      - name: Report coverage
        run: |
          cat gnomock-cover.txt gnomockd-cover.txt internal-cover.txt > coverage.txt
          bash <(curl -s https://codecov.io/bash)

  test-github-action:
    name: "[core] github action"
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v1
      - name: Install Taskfile
        uses: Arduino/actions/setup-taskfile@master
        with:
          version: '3.0.0'
      - name: Build orlangure/gnomock image
        run: task gnomock:build:server
      - name: Start Gnomock server
        uses: gnomock/github-action@master
      - name: Test Gnomock connection
        run: curl localhost:23042/stop -d '{"id":"42"}'

  test-sdk:
    name: "[sdk] python"
    runs-on: ubuntu-latest
    env:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v1
      - name: Install Taskfile
        uses: Arduino/actions/setup-taskfile@master
        with:
          version: '3.0.0'
      - name: Generate
        run: task generate:sdk:python
      - name: Test
        run: task test:sdk:python

  test-localstack:
    name: "[preset] localstack"
    runs-on: ubuntu-latest
    env:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    steps:
      - name: Set up Go 1.15
        uses: actions/setup-go@v1
        with:
          go-version: 1.15
      - name: Check out code into the Go module directory
        uses: actions/checkout@v1
      - name: Get dependencies
        run: go get -v -t -d ./...
      - name: Test preset
        run: go test -race -cover -coverprofile=preset-cover.txt -coverpkg=./... -v ./preset/localstack/...
      - name: Test server
        run: go test -race -cover -coverprofile=server-cover.txt -coverpkg=./... -v ./internal/gnomockd -run TestLocalstack
      - name: Report coverage
        run: |
          cat preset-cover.txt server-cover.txt > coverage.txt
          bash <(curl -s https://codecov.io/bash)

  test-elastic:
    name: "[preset] elastic"
    runs-on: ubuntu-latest
    env:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    steps:
      - name: Set up Go 1.15
        uses: actions/setup-go@v1
        with:
          go-version: 1.15
      - name: Check out code into the Go module directory
        uses: actions/checkout@v1
      - name: Get dependencies
        run: go get -v -t -d ./...
      - name: Test preset
        run: go test -cover -covermode=atomic -coverprofile=preset-cover.txt -coverpkg=./... -v ./preset/elastic/...
      - name: Test server
        run: go test -cover -covermode=atomic -coverprofile=server-cover.txt -coverpkg=./... -v ./internal/gnomockd -run TestElastic
      - name: Report coverage
        run: |
          cat preset-cover.txt server-cover.txt > coverage.txt
          bash <(curl -s https://codecov.io/bash)

  test-memcached:
    name: "[preset] memcached"
    runs-on: ubuntu-latest
    env:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    steps:
      - name: Set up Go 1.15
        uses: actions/setup-go@v1
        with:
          go-version: 1.15
      - name: Check out code into the Go module directory
        uses: actions/checkout@v1
      - name: Get dependencies
        run: go get -v -t -d ./...
      - name: Test preset
        run: go test -race -cover -coverprofile=preset-cover.txt -coverpkg=./... -v ./preset/memcached/...
      - name: Test server
        run: go test -race -cover -coverprofile=server-cover.txt -coverpkg=./... -v ./internal/gnomockd -run TestMemcached
      - name: Report coverage
        run: |
          cat preset-cover.txt server-cover.txt > coverage.txt
          bash <(curl -s https://codecov.io/bash)

  test-rabbitmq:
    name: "[preset] rabbitmq"
    runs-on: ubuntu-latest
    env:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    steps:
      - name: Set up Go 1.15
        uses: actions/setup-go@v1
        with:
          go-version: 1.15
      - name: Check out code into the Go module directory
        uses: actions/checkout@v1
      - name: Get dependencies
        run: go get -v -t -d ./...
      - name: Test preset
        run: go test -race -cover -coverprofile=preset-cover.txt -coverpkg=./... -v ./preset/rabbitmq/...
      - name: Test server
        run: go test -race -cover -coverprofile=server-cover.txt -coverpkg=./... -v ./internal/gnomockd -run TestRabbitMQ
      - name: Report coverage
        run: |
          cat preset-cover.txt server-cover.txt > coverage.txt
          bash <(curl -s https://codecov.io/bash)

  test-kafka:
    name: "[preset] kafka"
    runs-on: ubuntu-latest
    env:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    steps:
      - name: Set up Go 1.15
        uses: actions/setup-go@v1
        with:
          go-version: 1.15
      - name: Check out code into the Go module directory
        uses: actions/checkout@v1
      - name: Get dependencies
        run: go get -v -t -d ./...
      - name: Test preset
        run: go test -race -cover -coverprofile=preset-cover.txt -coverpkg=./... -v ./preset/kafka/...
      - name: Test server
        run: go test -race -cover -coverprofile=server-cover.txt -coverpkg=./... -v ./internal/gnomockd -run TestKafka
      - name: Report coverage
        run: |
          cat preset-cover.txt server-cover.txt > coverage.txt
          bash <(curl -s https://codecov.io/bash)

  test-postgres:
    name: "[preset] postgres"
    runs-on: ubuntu-latest
    env:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    steps:
      - name: Set up Go 1.15
        uses: actions/setup-go@v1
        with:
          go-version: 1.15
      - name: Check out code into the Go module directory
        uses: actions/checkout@v1
      - name: Get dependencies
        run: go get -v -t -d ./...
      - name: Test preset
        run: go test -race -cover -coverprofile=preset-cover.txt -coverpkg=./... -v ./preset/postgres/...
      - name: Test server
        run: go test -race -cover -coverprofile=server-cover.txt -coverpkg=./... -v ./internal/gnomockd -run TestPostgres
      - name: Report coverage
        run: |
          cat preset-cover.txt server-cover.txt > coverage.txt
          bash <(curl -s https://codecov.io/bash)

  test-mariadb:
    name: "[preset] mariadb"
    runs-on: ubuntu-latest
    env:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    steps:
      - name: Set up Go 1.15
        uses: actions/setup-go@v1
        with:
          go-version: 1.15
      - name: Check out code into the Go module directory
        uses: actions/checkout@v1
      - name: Get dependencies
        run: go get -v -t -d ./...
      - name: Test preset
        run: go test -race -cover -coverprofile=preset-cover.txt -coverpkg=./... -v ./preset/mariadb/...
      - name: Test server
        run: go test -race -cover -coverprofile=server-cover.txt -coverpkg=./... -v ./internal/gnomockd -run TestMariaDB
      - name: Report coverage
        run: |
          cat preset-cover.txt server-cover.txt > coverage.txt
          bash <(curl -s https://codecov.io/bash)

  test-splunk:
    name: "[preset] splunk"
    runs-on: ubuntu-latest
    env:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    steps:
      - name: Set up Go 1.15
        uses: actions/setup-go@v1
        with:
          go-version: 1.15
      - name: Check out code into the Go module directory
        uses: actions/checkout@v1
      - name: Get dependencies
        run: go get -v -t -d ./...
      - name: Test preset
        run: go test -race -cover -coverprofile=preset-cover.txt -coverpkg=./... -v ./preset/splunk/...
      - name: Test server
        run: go test -race -cover -coverprofile=server-cover.txt -coverpkg=./... -v ./internal/gnomockd -run TestSplunk
      - name: Report coverage
        run: |
          cat preset-cover.txt server-cover.txt > coverage.txt
          bash <(curl -s https://codecov.io/bash)

  test-redis:
    name: "[preset] redis"
    runs-on: ubuntu-latest
    env:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    steps:
      - name: Set up Go 1.15
        uses: actions/setup-go@v1
        with:
          go-version: 1.15
      - name: Check out code into the Go module directory
        uses: actions/checkout@v1
      - name: Get dependencies
        run: go get -v -t -d ./...
      - name: Test preset
        run: go test -race -cover -coverprofile=preset-cover.txt -coverpkg=./... -v ./preset/redis/...
      - name: Test server
        run: go test -race -cover -coverprofile=server-cover.txt -coverpkg=./... -v ./internal/gnomockd -run TestRedis
      - name: Report coverage
        run: |
          cat preset-cover.txt server-cover.txt > coverage.txt
          bash <(curl -s https://codecov.io/bash)

  test-mysql:
    name: "[preset] mysql"
    runs-on: ubuntu-latest
    env:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    steps:
      - name: Set up Go 1.15
        uses: actions/setup-go@v1
        with:
          go-version: 1.15
      - name: Check out code into the Go module directory
        uses: actions/checkout@v1
      - name: Get dependencies
        run: go get -v -t -d ./...
      - name: Test preset
        run: go test -race -cover -coverprofile=preset-cover.txt -coverpkg=./... -v ./preset/mysql/...
      - name: Test server
        run: go test -race -cover -coverprofile=server-cover.txt -coverpkg=./... -v ./internal/gnomockd -run TestMySQL
      - name: Report coverage
        run: |
          cat preset-cover.txt server-cover.txt > coverage.txt
          bash <(curl -s https://codecov.io/bash)

  test-mssql:
    name: "[preset] mssql"
    runs-on: ubuntu-latest
    env:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    steps:
      - name: Set up Go 1.15
        uses: actions/setup-go@v1
        with:
          go-version: 1.15
      - name: Check out code into the Go module directory
        uses: actions/checkout@v1
      - name: Get dependencies
        run: go get -v -t -d ./...
      - name: Test preset
        run: go test -race -cover -coverprofile=preset-cover.txt -coverpkg=./... -v ./preset/mssql/...
      - name: Test server
        run: go test -race -cover -coverprofile=server-cover.txt -coverpkg=./... -v ./internal/gnomockd -run TestMSSQL
      - name: Report coverage
        run: |
          cat preset-cover.txt server-cover.txt > coverage.txt
          bash <(curl -s https://codecov.io/bash)

  test-mongo:
    name: "[preset] mongo"
    runs-on: ubuntu-latest
    env:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    steps:
      - name: Set up Go 1.15
        uses: actions/setup-go@v1
        with:
          go-version: 1.15
      - name: Check out code into the Go module directory
        uses: actions/checkout@v1
      - name: Get dependencies
        run: go get -v -t -d ./...
      - name: Test preset
        run: go test -race -cover -coverprofile=preset-cover.txt -coverpkg=./... -v ./preset/mongo/...
      - name: Test server
        run: go test -race -cover -coverprofile=server-cover.txt -coverpkg=./... -v ./internal/gnomockd -run TestMongo
      - name: Report coverage
        run: |
          cat preset-cover.txt server-cover.txt > coverage.txt
          bash <(curl -s https://codecov.io/bash)

  test-k3s:
    name: "[preset] k3s"
    runs-on: ubuntu-latest
    env:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    steps:
      - name: Set up Go 1.15
        uses: actions/setup-go@v1
        with:
          go-version: 1.15
      - name: Check out code into the Go module directory
        uses: actions/checkout@v1
      - name: Get dependencies
        run: go get -v -t -d ./...
      - name: Test preset
        run: go test -race -cover -coverprofile=preset-cover.txt -coverpkg=./... -v ./preset/k3s/...
      - name: Test server
        run: go test -race -cover -coverprofile=server-cover.txt -coverpkg=./... -v ./internal/gnomockd -run TestK3s
      - name: Report coverage
        run: |
          cat preset-cover.txt server-cover.txt > coverage.txt
          bash <(curl -s https://codecov.io/bash)

  test-cockroachdb:
    name: "[preset] cockroachdb"
    runs-on: ubuntu-latest
    env:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    steps:
      - name: Set up Go 1.15
        uses: actions/setup-go@v1
        with:
          go-version: 1.15
      - name: Check out code into the Go module directory
        uses: actions/checkout@v1
      - name: Get dependencies
        run: go get -v -t -d ./...
      - name: Test preset
        run: go test -race -cover -coverprofile=preset-cover.txt -coverpkg=./... -v ./preset/cockroachdb/...
      - name: Test server
        run: go test -race -cover -coverprofile=server-cover.txt -coverpkg=./... -v ./internal/gnomockd -run TestCockroachDB
      - name: Report coverage
        run: |
          cat preset-cover.txt server-cover.txt > coverage.txt
          bash <(curl -s https://codecov.io/bash)

### preset tests go here
