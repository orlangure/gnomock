version: '3'

tasks:
  #
  # Tests
  #

  test:core:gnomock:
    env:
      GOMAXPROCS: 2
    cmds:
      - go test -race -cover -coverprofile=gnomock-cover.txt -coverpkg=./... -v .

  test:core:gnomockd:
    env:
      GOMAXPROCS: 2
    cmds:
      - go test -race -cover -coverprofile=gnomockd-cover.txt -coverpkg=./... -v ./internal/gnomockd -run TestGnomockd

  test:core:internal:
    env:
      GOMAXPROCS: 2
    cmds:
      - |
        go test -race -cover -coverprofile=internal-cover.txt -v -coverpkg=./... \
          ./internal/errors \
          ./internal/registry \
          ./internal/cleaner \
          ./internal/health

  #
  # SDK release routines
  #

  release:sdk:python:
    cmds:
      - task: swagger:update-version
      - task: git:clone:python
      - task: generate:sdk:python
      # - task: test:sdk:python
      - task: git:commit:python
      - rm -rf ./dist
      - deactivate || true
      - python3 setup.py sdist bdist_wheel
      - python3 -m twine upload dist/*
    dir: ./sdktest/python/gnomock

  swagger:update-version:
    cmds:
      - |
        sed -Ei '' 's/^  version: (.*)$/  version: {{.version}}/' swagger/swagger.yaml
      - |
        sed -Ei '' 's/^packageVersion: (.*)$/packageVersion: {{.version}}/' swagger/config/python.yaml
      - |
        sed -Ei '' 's/apis\/orlangure\/gnomock\/(.*)#/apis\/orlangure\/gnomock\/{{.version}}#/' README.md
      - git add README.md swagger/config/python.yaml swagger/swagger.yaml
      - git commit -m 'Update version to {{.version}}'
    silent: true
    dir: .
    vars:
      CURRENT_BRANCH:
        sh: git branch --show-current
    preconditions:
      - sh: test $version
        msg: version is not set
      - sh: test "{{.CURRENT_BRANCH}}" != "master"
        msg: version changes cannot happen on master branch
      - sh: test $release
        msg: release flag is not set

  git:clone:python:
    cmds:
      - rm -rf gnomock
      - git clone --depth 1 https://github.com/orlangure/gnomock-python-sdk gnomock
    dir: ./sdktest/python

  generate:sdk:python:
    cmds:
      - |
        docker run --rm -v $PWD:/local \
          openapitools/openapi-generator-cli:v4.3.1 generate \
          -i /local/swagger/swagger.yaml \
          -g python \
          -o /local/sdktest/python/gnomock \
          -c /local/swagger/config/python.yaml \
          --git-user-id orlangure \
          --git-repo-id gnomock-python-sdk
    silent: true
    dir: .

  git:commit:python:
    cmds:
      - rm .travis.yml
      - git add .
      - git commit -m 'Bump version to {{.version}}'
      - git push
    dir: ./sdktest/python/gnomock
    preconditions:
      - sh: test $version
        msg: version is not set

  test:sdk:python:
    cmds:
      - task: gnomock:run
      - |
        {{ if not .CI }}
        python3 -m venv venv
        source venv/bin/activate
        {{ else }}
        docker system df
        docker system prune -f
        docker system df
        {{ end }}
        pip3 install -r requirements.txt
        python3 -m pytest -n 1 -v -k TestSDK
      - task: gnomock:stop
    dir: ./sdktest/python

  gnomock:run:
    cmds:
      - task: gnomock:stop
      - task: gnomock:build:server
      - task: gnomock:build:cleaner
      - |
        docker run -itd --rm \
        -p 23042:23042 \
        -v /var/run/docker.sock:/var/run/docker.sock \
        -v $PWD:$PWD \
        --name gnomockd_test \
        orlangure/gnomock
    dir: .

  gnomock:stop:
    cmds:
      - docker container stop gnomockd_test || true

  gnomock:build:server:
    env:
      DOCKER_BUILDKIT: "1"
    cmds:
      - task: gnomock:build:server:amd64
      - task: gnomock:build:server:arm64
    dir: .

  gnomock:build:server:amd64:
    env:
      DOCKER_BUILDKIT: "1"
    cmds:
      - docker build --build-arg GOARCH=amd64 --platform linux/amd64 --progress plain --tag orlangure/gnomock:amd64 .
    status:
      - test -z $release
      - test {{ eq ARCH "amd64" }} == false
    dir: .

  gnomock:build:server:arm64:
    env:
      DOCKER_BUILDKIT: "1"
    cmds:
      - docker build --build-arg GOARCH=arm64 --platform linux/arm64 --progress plain --tag orlangure/gnomock:arm64 .
    status:
      - test -z $release
      - test {{ eq ARCH "arm64" }} == false
    dir: .

  gnomock:build:cleaner:
    env:
      DOCKER_BUILDKIT: "1"
    cmds:
      - task: gnomock:build:cleaner:amd64
      - task: gnomock:build:cleaner:arm64
    dir: ./cmd/cleaner

  gnomock:build:cleaner:amd64:
    env:
      DOCKER_BUILDKIT: "1"
    cmds:
      - docker build --build-arg GOARCH=amd64 --platform linux/amd64 --progress plain --tag orlangure/gnomock-cleaner:amd64 .
    status:
      - test -z $release
      - test {{ eq ARCH "amd64" }} == false
    dir: ./cmd/cleaner

  gnomock:build:cleaner:arm64:
    env:
      DOCKER_BUILDKIT: "1"
    cmds:
      - docker build --build-arg GOARCH=arm64 --platform linux/arm64 --progress plain --tag orlangure/gnomock-cleaner:arm64 .
    status:
      - test -z $release
      - test {{ eq ARCH "arm64" }} == false
    dir: ./cmd/cleaner

  # to release, set env `release` to true
  gnomock:upload:cleaner:
    vars:
      CURRENT_BRANCH:
        sh: git branch --show-current
    cmds:
      - task: gnomock:build:cleaner

        # latest manifest
      - docker push orlangure/gnomock-cleaner:amd64
      - docker push orlangure/gnomock-cleaner:arm64
      - docker manifest create --amend orlangure/gnomock-cleaner:latest orlangure/gnomock-cleaner:amd64 orlangure/gnomock-cleaner:arm64
      - docker manifest push orlangure/gnomock-cleaner:latest

        # version manifest
      - docker tag orlangure/gnomock-cleaner:amd64 orlangure/gnomock-cleaner:{{.version}}-amd64
      - docker tag orlangure/gnomock-cleaner:arm64 orlangure/gnomock-cleaner:{{.version}}-arm64
      - docker push orlangure/gnomock-cleaner:{{.version}}-amd64
      - docker push orlangure/gnomock-cleaner:{{.version}}-arm64
      - docker manifest create --amend orlangure/gnomock-cleaner:{{.version}} orlangure/gnomock-cleaner:{{.version}}-amd64 orlangure/gnomock-cleaner:{{.version}}-arm64
      - docker manifest push orlangure/gnomock-cleaner:{{.version}}
    preconditions:
      - sh: test $version
        msg: version is not set
      - sh: test "{{.CURRENT_BRANCH}}" == "master"
        msg: docker images must be built on master

  # to release, set env `release` to true
  gnomock:upload:server:
    vars:
      CURRENT_BRANCH:
        sh: git branch --show-current
    cmds:
      - task: gnomock:build:server

        # latest manifest
      - docker push orlangure/gnomock:arm64
      - docker push orlangure/gnomock:amd64
      - docker manifest create --amend orlangure/gnomock:latest orlangure/gnomock:amd64 orlangure/gnomock:arm64
      - docker manifest push orlangure/gnomock:latest

        # version manifest
      - docker tag orlangure/gnomock:amd64 orlangure/gnomock:{{.version}}-amd64
      - docker tag orlangure/gnomock:arm64 orlangure/gnomock:{{.version}}-arm64
      - docker push orlangure/gnomock:{{.version}}-amd64
      - docker push orlangure/gnomock:{{.version}}-arm64
      - docker manifest create --amend orlangure/gnomock:{{.version}} orlangure/gnomock:{{.version}}-amd64 orlangure/gnomock:{{.version}}-arm64
      - docker manifest push orlangure/gnomock:{{.version}}
    preconditions:
      - sh: test $version
        msg: version is not set
      - sh: test "{{.CURRENT_BRANCH}}" == "master"
        msg: docker images must be built on master
      - sh: test $release
        msg: release flag is not set

  release:gnomock:docker:
    cmds:
      - task: gnomock:upload:cleaner
      - task: gnomock:upload:server
